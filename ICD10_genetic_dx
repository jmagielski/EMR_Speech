start <- Sys.time()
message(" \n Running ICD10-code-genetic diagnosis associations... \n ")

library(librarian)
library(RColorBrewer)
librarian::shelf(tidyverse, magrittr, Hmisc, data.table, quiet = T) 

all_encs <- fread("allEncs-deid.csv") 
cohort <- read_csv("allEncICD10-deid.csv")

cohort_all_encs <- all_encs %>% 
  select(-ICD10_CODE) %>% 
  left_join(cohort %>% select(-...1), by = "DEID_CSN_ID")

speech_cohort <- cohort_all_encs %>% 
  filter(grepl("F80|R4[7-9]", ICD10_CODE)) %>% 
  select(-DEID_CSN_ID) %>% 
  distinct()

speech_cohort$DEID_PAT_ID %>% unique() %>% length()
speech_encs$DEID_CSN_ID %>% unique() %>% length() 

speech_encs <- cohort_all_encs %>% filter(DEID_PAT_ID %in% speech_cohort$DEID_PAT_ID)

gene_dx <- cohort_all_encs %>% filter(ICD10_CODE == "Z15.89") %>% unique() 

with_gene <- gene_dx %>% select(AGE, CHOP_NAME, DEID_PAT_ID) %>% 
  mutate(gene = str_extract(CHOP_NAME, "[[:upper:]]([[:upper:]]|[:digit:]|-)+")) %>%
  filter(!grepl("SNHL|MELAS|GMFCS|KBG|DNA|ADHD|SCNN1A|Q10|CIDP|CF|MCA|MPS|B-|AML|PVC|POTS|URI|DVD|CDG|LVH|MERRF|CVA|QT|PDH|PFAPA|EEG|FTT|ILD|IV|CODAS|ASD|X-|G-|OSA|Q-T|SGA|B-|CKD|MRI|PCD|NARP|COPD|JXG|IVH|EDS|HSV|XX|HLHS|EKG|CNS|COVID-19|VNS|FUO|SCID|CVID", gene))

speech_encs_time_final <- speech_encs_time %>% 
  left_join(with_gene %>% select(DEID_PAT_ID, gene) %>% unique(), by = c("DEID_PAT_ID")) %>% 
  filter(!is.na(ICD10_CODE)) %>% 
  select(-c(AGE, CHOP_NAME, DEID_CSN_ID)) %>%
  unique()


# ICD10-code-genetic diagnosis associations

ICD_sig <- matrix(nrow=0,ncol=13) %>% as.data.frame()
names(ICD_sig) <- c('ICD10','var', 'yes_var', 'no_var', 'yes_cohort', 'no_cohort', 
                    'pval',"var_freq", "cohort_freq", "OR", "OR_adjusted", 
                    "OR.lower", "OR.upper")

var_types <- unique(speech_encs_time_final$gene) %>% na.exclude()


for(g in 1:length(var_types)){
  
  var_x = var_types[g]
  
  
  pats_var <- speech_encs_time_final %>% filter(!is.na(gene) & gene == var_x) # cohort w gene
  pats <- pats_var$DEID_PAT_ID %>% unique()
  # yesg_ICD <- speech_encs_time_final %>% filter(DEID_PAT_ID %in% pats & !is.na(gene))
  yesg_ICD = pats_var
  
  
  nog_ICD <- speech_encs_time_final %>% filter(DEID_PAT_ID %nin% pats) # cohort w no gene
  nog_pats <- nog_ICD$DEID_PAT_ID %>% unique()
  
  
  y_ICD_count <- yesg_ICD %>% count(ICD10_CODE)
  n_ICD_count <- nog_ICD %>% count(ICD10_CODE)
  
  ICD_1 <- matrix(nrow=nrow(y_ICD_count), ncol=13) %>% as.data.frame()
  names(ICD_1) <- c('ICD10','var', 'yes_var', 'no_var', 'yes_cohort', 'no_cohort', 
                    'pval',"var_freq", "cohort_freq", "OR", "OR_adjusted", 
                    "OR.lower", "OR.upper")
  ICD_1$ICD10 <- y_ICD_count$ICD10_CODE
  ICD_1$var <- var_x
  
  for (h in 1:nrow(ICD_1)) {
    
    
    hp <- ICD_1$ICD10[h]
    
    fish <- matrix(ncol=2,nrow=2) %>% as.data.frame()
    names(fish) <- c('ICD_present','ICD_absent')
    row.names(fish) <- c('var_present','var_absent')
    
   
    fish['var_present','ICD_present'] <- 0
    if (hp %in% n_ICD_count$ICD10_CODE) {
      fish['var_present','ICD_present'] <- y_ICD_count %>% 
        filter(ICD10_CODE == hp) %>% pull(n)
    }
    
    
    fish['var_absent','ICD_present'] <- 0
    if (hp %in% n_ICD_count$ICD10_CODE) {
      fish['var_absent','ICD_present'] <- n_ICD_count %>% 
        filter(ICD10_CODE == hp) %>% pull(n)
    }
    
   
    fish['var_present','ICD_absent'] <- length(pats) - fish['var_present','ICD_present']
    
    
    fish['var_absent','ICD_absent'] <- length(nog_pats) - fish['var_absent','ICD_present']
    
    
    ICD_1$yes_var[h] = fish['var_present','ICD_present']
    ICD_1$no_var[h] = fish['var_present','ICD_absent']
    ICD_1$yes_cohort[h] = fish['var_absent','ICD_present']
    ICD_1$no_cohort[h] = fish['var_absent','ICD_absent']
    ICD_1$var_freq[h] = fish['var_present','ICD_present']/length(pats)
    ICD_1$cohort_freq[h] = fish['var_absent','ICD_present']/length(nog_pats)
    
    
    test.res <- fisher.test(fish)
    ICD_1$pval[h] <- test.res$p.value
    ICD_1$OR[h] <- test.res$estimate
    
    
    if (ICD_1$OR[h] == Inf) {
      fish.adj = fish
      fish.adj['var_absent','ICD_present'] <- 1
      fish.adj['var_absent','ICD_absent'] <- fish['var_absent','ICD_absent'] - 1
      ICD_1$OR_adjusted[h] <- fisher.test(fish.adj)$estimate
    } else {
      ICD_1$OR_adjusted[h] = ICD_1$OR[h]
    }
    
    
    ICD_1$OR.lower[h] <- test.res$conf.int[1]
    ICD_1$OR.upper[h] <- test.res$conf.int[2]
    
  }
  
  ICD_sig <- ICD_sig %>% rbind(ICD_1)
  
}
 

ICD_match <- read_tsv("icd10cm_codes_2020.txt", col_names = "ICD10") %>% 
  separate(ICD10, into = c("ICD10", "CODE"), sep = "[[:space:]][[:space:]]+") %>% 
  mutate(ICD10 = trimws(ICD10), CODE = trimws(CODE)) 


  
ICD_sig_matched <- ICD_sig %>% 
  mutate(ICD10 = gsub("\\.", "", ICD10)) %>% 
  left_join(ICD_match)
  

ICD_sig_matched_final <- ICD_sig_matched %>% 
  arrange(as.numeric(pval)) %>% 
  filter(!grepl("Z1589", ICD10), yes_var >= 5) 
  
ICD_sig_matched_final <- ICD_sig_matched_final %>%   
  mutate(rank = seq(1:nrow(ICD_sig_matched_final))) %>% 
  mutate(p_adj = 0.05*rank/nrow(ICD_sig_matched_final)) %>% 
  mutate(FDR_SIG = case_when(pval < p_adj ~ "SIG", TRUE ~ "NOT"))

ICD_sig_matched_final %>% filter(FDR_SIG == "SIG") %>% nrow()


ICD_sig_matched_final_speech <- ICD_sig_matched %>% 
  filter(grepl("F80|R4[7-9]", ICD10))
ICD_sig_matched_final_speech <- ICD_sig_matched_final_speech %>% 
  arrange(as.numeric(pval)) %>% 
  mutate(rank = seq(1:nrow(ICD_sig_matched_final_speech))) %>% 
  mutate(p_adj = 0.05*rank/nrow(ICD_sig_matched_final_speech)) %>% 
  mutate(FDR_SIG = case_when(pval < p_adj ~ "SIG", TRUE ~ "NOT"))


ICD_sig_matched_final <- ICD_sig_matched %>% 
  arrange(as.numeric(pval)) %>% 
  filter(!grepl("Z1589", ICD10), yes_var >= 5) # Analysis on more than 5 pats exclude genetic dx

ICD_sig_matched_final_FDR10 <- ICD_sig_matched_final %>%   
  mutate(rank = seq(1:nrow(ICD_sig_matched_final))) %>% 
  mutate(p_adj = 0.1*rank/nrow(ICD_sig_matched_final)) %>% 
  mutate(FDR_SIG = case_when(pval < p_adj ~ "SIG", TRUE ~ "NOT"))

ICD_sig_matched_final_FDR10 %>% filter(FDR_SIG == "SIG") %>% nrow()

write_csv(ICD_sig_matched_final_FDR10, "/Users/magielskij/Desktop/filt_ICD10_sig_speech_results_FDR10.csv")

ICD_sig_matched_final_speech <- ICD_sig_matched %>% 
  filter(grepl("F80|R4[7-9]", ICD10))
ICD_sig_matched_final_speech_FDR10 <- ICD_sig_matched_final_speech %>% 
  arrange(as.numeric(pval)) %>% 
  mutate(rank = seq(1:nrow(ICD_sig_matched_final_speech))) %>% 
  mutate(p_adj = 0.1*rank/nrow(ICD_sig_matched_final_speech)) %>% 
  mutate(FDR_SIG = case_when(pval < p_adj ~ "SIG", TRUE ~ "NOT"))

ICD_sig_matched_final_speech_FDR10 %>% filter(FDR_SIG == "SIG") %>% nrow()


fishers <- read_csv("filt_ICD10_sig_speech_results_speech_FDR10.csv")

aphasia <- fishers %>%
  filter(CODE == "Aphasia") %>%
  select(var, pval, FDR_SIG) %>%
  mutate(pval = -log(pval))

ggplot(aphasia, aes(var,pval))+
  geom_point(colour = "steelblue", size = 10)+
  theme_classic()+
  ylab("-log(p)")+
  theme(legend.title = element_blank()) +
  theme(axis.text.x=element_blank())+
  theme(text = element_text(size = 20))+
  geom_hline(yintercept=5.0, linetype = "dashed", color="black", linewidth = 2)+
  ylim(0,30)+
  theme(legend.position = "none", legend.title = element_blank(), 
        axis.text = element_blank(), axis.title = element_blank())

ggsave("aphasia_fish_2.png", dpi = 500, width = 15, height = 10)


apraxia <- fishers %>%
  filter(CODE == "Apraxia") %>%
  select(var, pval, FDR_SIG) %>%
  mutate(pval = -log(pval))

ggplot(apraxia, aes(var,pval))+
  geom_point(colour = "dark green", size = 10)+
  theme_classic()+
  ylab("-log(p)")+
  theme(legend.title = element_blank()) +
  theme(axis.text.x=element_blank())+
  theme(text = element_text(size = 20))+
  geom_hline(yintercept=5.0, linetype = "dashed", color="black", linewidth = 2)+
  ylim(0,30)+
  theme(legend.position = "none", legend.title = element_blank(), 
        axis.text = element_blank(), axis.title = element_blank())

ggsave("apraxia_fish_2.png", dpi = 500, width = 15, height = 10)

stuttering <- fishers %>%
  filter(CODE == "Childhood onset fluency disorder") %>%
  select(var, pval, FDR_SIG) %>%
  mutate(pval = -log(pval))

ggplot(stuttering, aes(var,pval))+
  geom_point(colour = "dark red", size = 10)+
  theme_classic()+
  ylab("-log(p)")+
  theme(legend.title = element_blank()) +
  theme(axis.text.x=element_blank())+
  theme(text = element_text(size = 20))+
  geom_hline(yintercept=5.0, linetype = "dashed", color="black", linewidth = 2)+
  ylim(0,30)+
  theme(legend.position = "none", legend.title = element_blank(), 
        axis.text = element_blank(), axis.title = element_blank())

ggsave("stuttering_fish_2.png", dpi = 500, width = 15, height = 10)

other <- fishers %>%
  filter(CODE == "Other developmental disorders of speech and language") %>%
  select(var, pval, FDR_SIG) %>%
  mutate(pval = -log(pval))

ggplot(other, aes(var,pval))+
  geom_point(colour = "purple", size = 10)+
  theme_classic()+
  ylab("-log(p)")+
  theme(legend.title = element_blank()) +
  theme(axis.text.x=element_blank())+
  theme(text = element_text(size = 20))+
  geom_hline(yintercept=5.5, linetype = "dashed", color="black", linewidth = 2)+
  ylim(0,30)+
  theme(legend.position = "none", legend.title = element_blank(), 
        axis.text = element_blank(), axis.title = element_blank())

ggsave("other_fish_2.png", dpi = 500, width = 15, height = 10)


message("\n  ...ICD10-code-genetic diagnosis analysis complete\n ")
stop = Sys.time()
stop - start
